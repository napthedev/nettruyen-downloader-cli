name: CI
on:
  push:
    branches: [master]
  pull_request:
    branches: "*"
jobs:
  build:
    name: Typecheck, lint, test, and build on Node ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: ["16.x"]
        pnpm-version: ["7.x"]
        os: [ubuntu-latest]
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Use pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --fix-lockfile
      - name: Typecheck
        run: pnpm run typecheck
      - name: Lint
        run: pnpm run lint
      - name: Build
        run: pnpm run build
  publish:
    name: Release
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pnpm-version: ["7.x"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --fix-lockfile
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
